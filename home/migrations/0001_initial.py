# Generated by Django 4.1.6 on 2023-02-28 17:38

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_type', models.CharField(max_length=20)),
                ('uid', models.CharField(max_length=80, unique=True)),
                ('home_host', models.URLField(max_length=2000)),
                ('display_name', models.CharField(max_length=20)),
                ('profile_url', models.URLField(max_length=2000)),
                ('author_github', models.URLField(max_length=2000)),
                ('profile_image', models.URLField(max_length=2000)),
            ],
        ),
        migrations.CreateModel(
            name='Authors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_type', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_type', models.CharField(max_length=20)),
                ('page', models.IntegerField()),
                ('size', models.IntegerField()),
                ('post', models.URLField(max_length=2000)),
                ('comments_id', models.URLField(max_length=2000)),
            ],
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_type', models.CharField(max_length=20)),
                ('author_actor', models.JSONField(null=True)),
                ('author_object', models.JSONField(null=True)),
                ('following_summary', models.CharField(max_length=80, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Liked',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('context', models.URLField(max_length=2000)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_type', models.CharField(max_length=20)),
                ('title', models.CharField(max_length=80, null=True)),
                ('post_id', models.CharField(max_length=50, unique=True)),
                ('post_source', models.URLField(max_length=2000)),
                ('post_origin', models.URLField(max_length=2000)),
                ('description', models.TextField(max_length=80, null=True)),
                ('content_type', models.CharField(max_length=20)),
                ('content', models.TextField(max_length=10000)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('comment_count', models.IntegerField(null=True)),
                ('comments', models.URLField(max_length=2000, null=True)),
                ('pub_date', models.DateTimeField(auto_now_add=True)),
                ('is_unlisted', models.BooleanField()),
                ('visibility', models.CharField(default='FRIENDS', max_length=20)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='home.author', to_field='uid')),
            ],
            options={
                'ordering': ('-pub_date',),
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('context', models.URLField(max_length=2000)),
                ('like_summary', models.CharField(max_length=80)),
                ('object_type', models.CharField(max_length=20)),
                ('author_object', models.JSONField(null=True)),
                ('obj', models.URLField(max_length=2000)),
                ('associated_author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='liked_items', to='home.author')),
            ],
        ),
        migrations.CreateModel(
            name='Inbox',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inbox_item', models.JSONField(blank=True, null=True)),
                ('associated_author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inbox_items', to='home.author')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_type', models.CharField(max_length=20)),
                ('author_json', models.JSONField(blank=True, null=True)),
                ('comment_content', models.TextField(max_length=200)),
                ('content_type', models.CharField(max_length=20)),
                ('pub_date', models.DateTimeField()),
                ('comment_id', models.URLField(max_length=50, unique=True)),
                ('associated_author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment_items', to='home.author')),
                ('comments', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments_list', to='home.comments')),
            ],
        ),
        migrations.CreateModel(
            name='Followers',
            fields=[
                ('author_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='home.author')),
                ('follower_author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='followers_items', to='home.author')),
            ],
            bases=('home.author',),
        ),
    ]
